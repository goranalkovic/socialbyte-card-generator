{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.23.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  import { onMount } from \"svelte\";\n\n  let imeTvrtke = \"Tvrtka\";\n  let infoLinija1 = \"...\";\n  let infoLinija2 = \"...\";\n  let infoLinija3 = \"...\";\n  let infoLinija4 = \"...\";\n  let qrLink = \"https://google.com\";\n  let logoTvrtke;\n  let logoImg;\n  let drawVizitkaFront;\n  let drawVizitkaBack;\n  let drawPhoneScreen;\n  let qr;\n  let vizitkaFront;\n  let vizitkaBack;\n  let phoneScreen;\n  let vizitkaFrontContext;\n  let vizitkaBackContext;\n  let phoneScreenContext;\n  let scale = 1;\n\n  const getCanvasAsImage = (ctx, x, y, width, height) => {\n    let imgData = ctx.getImageData(x, y, width, height);\n\n    let tc = document.createElement(\"canvas\");\n    tc.width = imgData.width;\n    tc.height = imgData.height;\n    let tctx = tc.getContext(\"2d\");\n    tctx.putImageData(imgData, 0, 0);\n    return tc.toDataURL(\"image/png\");\n  };\n\n  const downloadURI = (uri, name) => {\n    let link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    link.click();\n  };\n\n  const osvjezi = () => {\n    qr = new VanillaQR({\n      url: qrLink,\n      width: 200,\n      height: 200,\n      colorLight: \"#fafafa\",\n      colorDark: \"#000\",\n      toTable: false,\n      ecclevel: 4,\n      noBorder: true,\n    });\n    let imageElement = qr.toImage(\"png\");\n\n    document.querySelector(\"#qrcode\").innerHTML = \"\";\n    document.querySelector(\"#qrcode\").appendChild(imageElement);\n\n    if (logoTvrtke.files[0] != null) {\n      logoImg.src = URL.createObjectURL(logoTvrtke.files[0]);\n    }\n\n    setTimeout(() => {\n      drawVizitkaFront();\n      drawVizitkaBack();\n      drawPhoneScreen();\n    }, 200);\n  };\n\n  onMount(() => {\n    vizitkaFront = document.querySelector(\"#vizitkaFront\");\n    vizitkaBack = document.querySelector(\"#vizitkaBack\");\n    phoneScreen = document.querySelector(\"#phoneScreen\");\n\n    vizitkaFrontContext = vizitkaFront.getContext(\"2d\");\n    vizitkaBackContext = vizitkaBack.getContext(\"2d\");\n    phoneScreenContext = phoneScreen.getContext(\"2d\");\n\n    drawVizitkaFront = () => {\n      vizitkaFrontContext.clearRect(0, 0, 525 * scale, 300 * scale);\n\n      // Background\n      vizitkaFrontContext.fillStyle = \"#fff\";\n      vizitkaFrontContext.fillRect(300 * scale, 0, 525 * scale, 300 * scale);\n\n      // QR background\n      vizitkaFrontContext.fillStyle = \"#fafafa\";\n      vizitkaFrontContext.fillRect(0, 0, 300 * scale, 300 * scale);\n\n      let image = document.querySelector(\"#qrcode img\");\n      vizitkaFrontContext.drawImage(\n        image,\n        50 * scale,\n        50 * scale,\n        200 * scale,\n        200 * scale\n      );\n      vizitkaFrontContext.globalCompositeOperation = \"source-over\";\n\n      // Ime tvrtke\n\n      vizitkaFrontContext.font = `bold ${22 * scale}px Inter`;\n      vizitkaFrontContext.fillStyle = \"#3d3d3d\";\n      vizitkaFrontContext.fillText(imeTvrtke, 320 * scale, 60 * scale);\n\n      // Info linije\n\n      vizitkaFrontContext.font = `${16 * scale}px Inter`;\n      vizitkaFrontContext.fillStyle = \"#555\";\n      vizitkaFrontContext.fillText(infoLinija1, 320 * scale, 84 * scale);\n      vizitkaFrontContext.fillText(infoLinija2, 320 * scale, 106 * scale);\n      vizitkaFrontContext.fillText(infoLinija3, 320 * scale, 128 * scale);\n      vizitkaFrontContext.fillText(infoLinija4, 320 * scale, 150 * scale);\n\n      // Skeniraj za više info\n\n      vizitkaFrontContext.fillText(\n        \"Skenirajte QR kôd\",\n        320 * scale,\n        240 * scale\n      );\n      vizitkaFrontContext.fillText(\n        \"za više informacija\",\n        320 * scale,\n        262 * scale\n      );\n\n      // NFC logo\n\n      let nfcImg = document.querySelector(\"#nfclogo\");\n      vizitkaFrontContext.drawImage(\n        nfcImg,\n        490 * scale,\n        15 * scale,\n        21 * scale,\n        28 * scale\n      );\n    };\n\n    drawVizitkaBack = () => {\n      vizitkaBackContext.clearRect(\n        0 * scale,\n        0 * scale,\n        525 * scale,\n        300 * scale\n      );\n      //   Gradient\n      const grd = vizitkaBackContext.createLinearGradient(\n        0 * scale,\n        0 * scale,\n        525 * scale,\n        300 * scale\n      );\n      grd.addColorStop(0, \"#fff\");\n      grd.addColorStop(1, \"#eee\");\n\n      vizitkaBackContext.fillStyle = grd;\n      vizitkaBackContext.fillRect(\n        0 * scale,\n        0 * scale,\n        525 * scale,\n        300 * scale\n      );\n\n      vizitkaBackContext.globalCompositeOperation = \"source-over\";\n\n      // Text\n\n      vizitkaBackContext.font = `${16 * scale}px Inter`;\n      vizitkaBackContext.fillStyle = \"#707070\";\n      vizitkaBackContext.fillText(\"powered by\", 20 * scale, 276 * scale);\n\n      // SocialByte logo\n\n      vizitkaBackContext.font = `${16 * scale}px Oxygen`;\n      vizitkaBackContext.fillStyle = \"#000\";\n      vizitkaBackContext.fillText(\"Social\", 112 * scale, 276 * scale);\n\n      const grd2 = vizitkaBackContext.createLinearGradient(\n        158 * scale,\n        264 * scale,\n        194 * scale,\n        282 * scale\n      );\n      grd2.addColorStop(0, \"#81A4F2\");\n      grd2.addColorStop(1, \"#4568B6\");\n\n      vizitkaBackContext.font = `${16 * scale}px Oxygen`;\n      vizitkaBackContext.fillStyle = grd2;\n      vizitkaBackContext.fillText(\"Byte\", 158 * scale, 276 * scale);\n    };\n\n    drawPhoneScreen = () => {\n      phoneScreenContext.clearRect(\n        0 * scale,\n        0 * scale,\n        368 * scale,\n        776 * scale\n      );\n      // Background\n      phoneScreenContext.fillStyle = \"#fff\";\n      phoneScreenContext.fillRect(\n        0 * scale,\n        0 * scale,\n        368 * scale,\n        776 * scale\n      );\n\n      vizitkaBackContext.globalCompositeOperation = \"source-over\";\n\n      // Logo tvrtke\n\n      if (logoTvrtke.files[0] == null) {\n        phoneScreenContext.fillStyle = \"#f0f0f0\";\n        phoneScreenContext\n          .roundRect(\n            114 * scale,\n            80 * scale,\n            140 * scale,\n            140 * scale,\n            10 * scale\n          )\n          .fill();\n\n        phoneScreenContext.font = `${18 * scale}px Inter`;\n        phoneScreenContext.fillStyle = \"#707070\";\n        phoneScreenContext.textAlign = \"center\";\n        phoneScreenContext.fillText(\"Logo\", 184 * scale, 148 * scale);\n        phoneScreenContext.fillText(\"tvrtke\", 184 * scale, 170 * scale);\n      } else {\n        let img = document.querySelector(\"#logoTvrtke\");\n        phoneScreenContext.save();\n        roundedImage(\n          114 * scale,\n          80 * scale,\n          140 * scale,\n          140 * scale,\n          10 * scale\n        );\n        phoneScreenContext.clip();\n        phoneScreenContext.drawImage(\n          img,\n          114 * scale,\n          80 * scale,\n          140 * scale,\n          140 * scale\n        );\n        phoneScreenContext.restore();\n      }\n\n      // Prislonite uređaj ovdje\n\n      phoneScreenContext.font = `${32 * scale}px Inter`;\n      phoneScreenContext.fillStyle = \"#707070\";\n      phoneScreenContext.textAlign = \"center\";\n      phoneScreenContext.fillText(\n        \"Prislonite uređaj\",\n        184 * scale,\n        318 * scale\n      );\n      phoneScreenContext.font = `bold ${32 * scale}px Inter`;\n      phoneScreenContext.fillText(\"ovdje\", 184 * scale, 360 * scale);\n\n      // QR\n\n      let qrimage = document.querySelector(\"#qrcode img\");\n      phoneScreenContext.drawImage(\n        qrimage,\n        99 * scale,\n        430 * scale,\n        170 * scale,\n        170 * scale\n      );\n\n      // ili skenirajte QR kod\n      phoneScreenContext.font = `${20 * scale}px Inter`;\n      phoneScreenContext.fillText(\"ili skenirajte\", 184 * scale, 634 * scale);\n      phoneScreenContext.font = `bold ${20 * scale}px Inter`;\n      phoneScreenContext.fillText(\"QR kôd\", 184 * scale, 660 * scale);\n\n      // powered by socialbyte\n\n      phoneScreenContext.textAlign = \"left\";\n      phoneScreenContext.font = `${16 * scale}px Inter`;\n      phoneScreenContext.fillStyle = \"#707070\";\n      phoneScreenContext.fillText(\"powered by\", 100 * scale, 740 * scale);\n\n      phoneScreenContext.font = `${16 * scale}px Oxygen`;\n      phoneScreenContext.fillStyle = \"#000\";\n      phoneScreenContext.fillText(\"Social\", 192 * scale, 740 * scale);\n\n      const grd2 = phoneScreenContext.createLinearGradient(\n        158 * scale,\n        264 * scale,\n        194 * scale,\n        282 * scale\n      );\n      grd2.addColorStop(0, \"#81A4F2\");\n      grd2.addColorStop(1, \"#4568B6\");\n\n      phoneScreenContext.font = `${16 * scale}px Oxygen`;\n      phoneScreenContext.fillStyle = grd2;\n      phoneScreenContext.fillText(\"Byte\", 238 * scale, 740 * scale);\n    };\n\n    osvjezi();\n\n    const roundedImage = (x, y, width, height, radius) => {\n      phoneScreenContext.beginPath();\n      phoneScreenContext.moveTo(x + radius, y);\n      phoneScreenContext.lineTo(x + width - radius, y);\n      phoneScreenContext.quadraticCurveTo(x + width, y, x + width, y + radius);\n      phoneScreenContext.lineTo(x + width, y + height - radius);\n      phoneScreenContext.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      phoneScreenContext.lineTo(x + radius, y + height);\n      phoneScreenContext.quadraticCurveTo(\n        x,\n        y + height,\n        x,\n        y + height - radius\n      );\n      phoneScreenContext.lineTo(x, y + radius);\n      phoneScreenContext.quadraticCurveTo(x, y, x + radius, y);\n      phoneScreenContext.closePath();\n    };\n\n    CanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {\n      if (w < 2 * r) r = w / 2;\n      if (h < 2 * r) r = h / 2;\n      this.beginPath();\n      this.moveTo(x + r, y);\n      this.arcTo(x + w, y, x + w, y + h, r);\n      this.arcTo(x + w, y + h, x, y + h, r);\n      this.arcTo(x, y + h, x, y, r);\n      this.arcTo(x, y, x + w, y, r);\n      this.closePath();\n      return this;\n    };\n  });\n</script>\n\n<style>\n  canvas {\n    /* border: 1px solid #000; */\n    margin: 10px;\n    border-radius: 2px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  }\n\n  #vizitkaFront,\n  #vizitkaBack {\n    border-radius: 10px;\n  }\n\n  #qrcode,\n  #logoTvrtke,\n  #nfclogo {\n    display: none;\n  }\n\n  .controls {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    gap: 0.75rem 1.5rem;\n    margin-bottom: 2rem;\n  }\n\n  label {\n    display: flex;\n    flex-direction: column;\n    row-gap: 0.5rem;\n  }\n\n  svg {\n    height: 2.2rem;\n    transform: translateY(9.5px);\n  }\n\n  h1 {\n    font-weight: 400;\n  }\n\n  a,\n  a:visited {\n    color: #444;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #333;\n  }\n</style>\n\n<a href=\"https://socialbyte.agency\" target=\"_blank\">\n\n  <h1>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 458.62 97.34\">\n      <defs>\n        <style>\n          .b556a9fa-02c6-4bd7-9c42-7ce98be376b3 {\n            fill: url(#fcbda166-f310-41a1-8730-7d2aa7be3e97);\n          }\n          .b07eae3e-a63b-4b88-9366-ffe7ace2004f {\n            fill: url(#a9e3b8a8-7862-4e0d-b484-b174eb08c61b);\n          }\n          .a0ad9c4e-d470-40f3-bf43-6dc3fd41588d {\n            fill: url(#b7c303bf-13ab-4794-8695-9281fbdc6748);\n          }\n          .ac2c9cf4-e399-4266-811c-85950d139491 {\n            fill: url(#f24aa22d-5672-4bbf-b9f6-9c1ebab49d29);\n          }\n        </style>\n        <linearGradient\n          id=\"fcbda166-f310-41a1-8730-7d2aa7be3e97\"\n          x1=\"268.14\"\n          y1=\"17.88\"\n          x2=\"363.55\"\n          y2=\"135.16\"\n          gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stop-color=\"#81a4f2\" />\n          <stop offset=\"0.25\" stop-color=\"#789be9\" />\n          <stop offset=\"0.66\" stop-color=\"#5e81cf\" />\n          <stop offset=\"1\" stop-color=\"#4568b6\" />\n        </linearGradient>\n        <linearGradient\n          id=\"a9e3b8a8-7862-4e0d-b484-b174eb08c61b\"\n          x1=\"295.63\"\n          y1=\"-4.48\"\n          x2=\"391.04\"\n          y2=\"112.79\"\n          xlink:href=\"#fcbda166-f310-41a1-8730-7d2aa7be3e97\" />\n        <linearGradient\n          id=\"b7c303bf-13ab-4794-8695-9281fbdc6748\"\n          x1=\"332.08\"\n          y1=\"-34.14\"\n          x2=\"427.49\"\n          y2=\"83.14\"\n          xlink:href=\"#fcbda166-f310-41a1-8730-7d2aa7be3e97\" />\n        <linearGradient\n          id=\"f24aa22d-5672-4bbf-b9f6-9c1ebab49d29\"\n          x1=\"353.93\"\n          y1=\"-51.91\"\n          x2=\"449.34\"\n          y2=\"65.36\"\n          xlink:href=\"#fcbda166-f310-41a1-8730-7d2aa7be3e97\" />\n      </defs>\n      <title>l-text-logo</title>\n      <g id=\"f0075fcc-5073-4002-980f-a729f1061942\" data-name=\"Layer 2\">\n        <g id=\"b5f803b8-e3b7-4018-8184-e8749d246e93\" data-name=\"Layer 1\">\n          <path\n            d=\"M23.19,75.24A45.34,45.34,0,0,1,0,69.29l3.22-10.5a48.34,48.34,0,0,0,10,4.1,37.73,37.73,0,0,0,10.52,1.56q6.3,0,9.52-2.71c2.15-1.8,3.22-4.4,3.22-7.78q0-6.75-9-9.33l-3.56-1.05q-2.94-.86-5.5-1.66c-1.71-.54-2.93-1-3.68-1.25Q.34,35.6.34,21.73q0-9.72,6.91-15T25.59,1.46q12.93,0,22.31,5.33l-4,9.67a43.61,43.61,0,0,0-17.78-4.3q-5.91,0-8.91,2.07T14,21.14q0,6,5.91,7.77,1.17.43,5.76,1.9l6,1.9q9.81,3.23,14,8T49.9,54.05q0,10.22-7.22,15.7T23.19,75.24Z\" />\n          <path\n            d=\"M79.25,75.29q-11.91,0-18.75-7.71T53.66,47.27q0-13,6.84-20.49t19.29-7.49q12,0,18.82,7.64t6.81,20.34q0,12.84-6.88,20.43T79.25,75.29Zm.34-9.71q6.5,0,9.77-4.74t3.27-13.57q0-8.94-3.27-13.63C87.17,30.52,83.89,29,79.49,29s-7.59,1.57-9.79,4.71-3.29,7.69-3.29,13.64,1.1,10.37,3.32,13.53S75.23,65.58,79.59,65.58Z\" />\n          <path\n            d=\"M135.07,75.29q-12.31,0-19.17-7.32T109,47q0-13.19,7.2-20.46t19-7.27q9.42,0,15.92,4.05l-3,9.13A26.93,26.93,0,0,0,135.75,29a12.43,12.43,0,0,0-10.23,4.64c-2.49,3.1-3.74,7.6-3.74,13.53s1.23,10.54,3.69,13.67,5.93,4.69,10.43,4.69a24.82,24.82,0,0,0,13.52-4.15l1.22,9.71a23.54,23.54,0,0,1-7,3.23A33.27,33.27,0,0,1,135.07,75.29Z\" />\n          <path\n            d=\"M156.38,12.79V1.86h12.84V12.79Zm0,61.48V20.61h12.79V74.27Z\" />\n          <path\n            d=\"M191.51,75.29q-7.47,0-12.08-4.12t-4.62-11.89q0-8.36,5.47-12.38t16.51-5.1l3.27-.39c1.17-.13,2.49-.26,3.95-.39s2.62-.25,3.47-.35V37.84q0-4.87-2.25-7.1t-6.83-2.22q-6.54,0-16.16,3.66c0-.1-.57-1.58-1.61-4.45s-1.58-4.32-1.62-4.39a51.67,51.67,0,0,1,20.51-4.05q10.85,0,15.77,4.71t4.93,15.26v35h-9.47c0-.13-.39-1.22-1.07-3.27s-1-3.14-1-3.28a30,30,0,0,1-7.83,5.74A21.5,21.5,0,0,1,191.51,75.29ZM195,66.21a14,14,0,0,0,7.74-2.12,12.45,12.45,0,0,0,4.71-5.15V48.58l-2.56.2c-1.61.13-2.48.19-2.61.19q-7.77.69-11.38,2.93t-3.61,7.23a6.73,6.73,0,0,0,2,5.25A8.16,8.16,0,0,0,195,66.21Z\" />\n          <path\n            d=\"M247.32,75a27.71,27.71,0,0,1-9.15-1.29,11.92,11.92,0,0,1-5.74-4.13,17.21,17.21,0,0,1-2.93-6.74,48,48,0,0,1-.83-9.71V.83L241.46,0V52.88q0,7.23,1.71,9.79c1.14,1.71,3.36,2.56,6.64,2.56A45.13,45.13,0,0,0,256,64.7l.34,9.13-1.2.24c-.76.17-1.5.3-2.2.42s-1.58.22-2.66.34A29.3,29.3,0,0,1,247.32,75Z\" />\n          <path\n            class=\"b556a9fa-02c6-4bd7-9c42-7ce98be376b3\"\n            d=\"M264.66,74.73V3.2H287q14.2,0,21.19,4.15t7,13.82a26,26,0,0,1-.19,3.07,18.22,18.22,0,0,1-.88,3.45,14.25,14.25,0,0,1-1.81,3.49,14.25,14.25,0,0,1-3.13,3,15.52,15.52,0,0,1-4.68,2.32,17.5,17.5,0,0,1,10.15,6.17A17.89,17.89,0,0,1,318.13,54q0,10.11-7.15,15.43t-19.8,5.32Zm13.23-42h11.33q13.14,0,13.14-10c0-3.74-1.26-6.32-3.79-7.72s-6.53-2.1-12-2.1h-8.65Zm0,32.42h11.48q15.24,0,15.23-11.91,0-6-3.81-8.65C298.26,42.85,294.33,42,289,42H277.89Z\" />\n          <path\n            class=\"b07eae3e-a63b-4b88-9366-ffe7ace2004f\"\n            d=\"M328.19,97.34a60.35,60.35,0,0,1-6.64-.39L320.92,87a55.43,55.43,0,0,0,5.71.24,12.87,12.87,0,0,0,7.13-1.76q2.69-1.76,4.44-6.25.19-.48,1.95-5.52L318.57,21.07h13.67L346.36,60q1.56-5.8,7-21.58t6-17.33H373q-22.32,59-22.51,59.47-3.48,9-8.74,12.92T328.19,97.34Z\" />\n          <path\n            class=\"a0ad9c4e-d470-40f3-bf43-6dc3fd41588d\"\n            d=\"M400.56,75.46a27.57,27.57,0,0,1-9.11-1.29,11.68,11.68,0,0,1-5.69-4.08,17.25,17.25,0,0,1-2.9-6.57,43.14,43.14,0,0,1-.86-9.35V28.83h-8.79l.49-6.93,9.18-.83L387,6.52l7.81,0v14.6h13.34v7.76H394.79V54.42c0,4.07.59,7,1.76,8.69s3.34,2.59,6.5,2.59a38.64,38.64,0,0,0,5.95-.49l.35,9.18c-.07,0-.47.07-1.2.22s-1.43.28-2.1.39-1.52.22-2.56.32S401.47,75.46,400.56,75.46Z\" />\n          <path\n            class=\"ac2c9cf4-e399-4266-811c-85950d139491\"\n            d=\"M437.33,75.76q-12.93,0-20.14-7.45T410,47.73q0-12.79,6.79-20.36t18.5-7.62q11.09,0,17.22,6.93t6.12,18.41c0,.56,0,1.45,0,2.69s0,2.15,0,2.73h-35.7Q423.08,58,427,62.16t10.81,4.12a33.86,33.86,0,0,0,16.9-4.59l1.8,9.09Q448.47,75.76,437.33,75.76Zm-14.2-33.3h23.43q0-6.55-3-10.06a10.2,10.2,0,0,0-8.25-3.52A11.26,11.26,0,0,0,427,32.3Q423.62,35.72,423.13,42.46Z\" />\n        </g>\n      </g>\n    </svg>\n    generator NFC/QR tagova\n  </h1>\n</a>\n\n<div class=\"controls\">\n  <label for=\"imeTvrtke\">\n    Ime tvrtke\n    <input\n      type=\"text\"\n      id=\"imeTvrtke\"\n      bind:value={imeTvrtke}\n      on:input={osvjezi} />\n  </label>\n  <label for=\"infoL1\">\n    Informacije 1\n    <input\n      type=\"text\"\n      id=\"infoL1\"\n      bind:value={infoLinija1}\n      on:input={osvjezi} />\n  </label>\n  <label for=\"infoL2\">\n    Informacije 2\n    <input\n      type=\"text\"\n      id=\"infoL2\"\n      bind:value={infoLinija2}\n      on:input={osvjezi} />\n  </label>\n  <label for=\"infoL3\">\n    Informacije 3\n    <input\n      type=\"text\"\n      id=\"infoL3\"\n      bind:value={infoLinija3}\n      on:input={osvjezi} />\n  </label>\n  <label for=\"infoL4\">\n    Informacije 4\n    <input\n      type=\"text\"\n      id=\"infoL4\"\n      bind:value={infoLinija4}\n      on:input={osvjezi} />\n  </label>\n  <label for=\"qrlink\">\n    Link za QR kod\n    <input type=\"text\" id=\"qrlink\" bind:value={qrLink} on:input={osvjezi} />\n  </label>\n  <label for=\"logo\">\n    Logo\n    <input type=\"file\" id=\"logo\" bind:this={logoTvrtke} on:input={osvjezi} />\n  </label>\n\n</div>\n\n<div class=\"controls\">\n\n  <label for=\"downloadbtn\">\n    <button\n      id=\"downloadbtn\"\n      on:click={() => {\n        downloadURI(getCanvasAsImage(vizitkaFrontContext, 0, 0, 525 * scale, 300 * scale), 'vizitka-prednja.png');\n        downloadURI(getCanvasAsImage(vizitkaBackContext, 0, 0, 525 * scale, 300 * scale), 'vizitka-straznja.png');\n        downloadURI(getCanvasAsImage(phoneScreenContext, 0, 0, 368 * scale, 776 * scale), 'mobitel.png');\n      }}>\n      Preuzmi .png\n    </button>\n  </label>\n  <label for=\"scale\">\n    Uvećanje: {scale}x\n    <input\n      type=\"range\"\n      min=\"1\"\n      max=\"5\"\n      step=\"0.5\"\n      id=\"scale\"\n      bind:value={scale}\n      on:change={osvjezi} />\n\n  </label>\n</div>\n\n<canvas id=\"vizitkaFront\" width={525 * scale} height={300 * scale} />\n<canvas id=\"vizitkaBack\" width={525 * scale} height={300 * scale} />\n<canvas id=\"phoneScreen\" width={368 * scale} height={776 * scale} />\n\n<img id=\"logoTvrtke\" bind:this={logoImg} alt=\"Logo\" />\n\n<img id=\"nfclogo\" src=\"nfc.svg\" alt=\"NFC\" />\n\n<div id=\"qrcode\" />\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_destroy","context","Map","callbacks","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","logoTvrtke","logoImg","drawVizitkaFront","drawVizitkaBack","drawPhoneScreen","qr","vizitkaFront","vizitkaBack","phoneScreen","vizitkaFrontContext","vizitkaBackContext","phoneScreenContext","imeTvrtke","infoLinija1","infoLinija2","infoLinija3","infoLinija4","qrLink","scale","getCanvasAsImage","x","y","width","height","imgData","getImageData","tc","getContext","putImageData","toDataURL","downloadURI","uri","link","download","href","click","osvjezi","VanillaQR","url","colorLight","colorDark","toTable","ecclevel","noBorder","imageElement","toImage","querySelector","innerHTML","files","src","URL","createObjectURL","setTimeout","clearRect","fillStyle","fillRect","image","drawImage","globalCompositeOperation","font","fillText","nfcImg","grd","createLinearGradient","addColorStop","grd2","roundRect","textAlign","img","save","roundedImage","clip","restore","qrimage","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","CanvasRenderingContext2D","prototype","w","h","r","this","arcTo","undefined","[object Object]","detaching","d","destroy_component","$destroy","type","index","indexOf","splice","body"],"mappings":"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"}